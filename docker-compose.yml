# i-Parapheur
# Copyright (C) 2019 Libriciel-SCOP
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.

# ========================================================================

# This docker-compose file will spin up an ACS cluster on a local host or on a server and it requires a minimum of 16GB Memory to distribute among containers.
# Limit container memory and assign X percentage to JVM.  There are couple of ways to allocate JVM Memory for ACS Containers
# For example: 'JAVA_OPTS: "$JAVA_OPTS -XX:+PrintFlagsFinal -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap"'
# But, as per Oracle docs (https://docs.oracle.com/javase/9/gctuning/parallel-collector1.htm#JSGCT-GUID-CAB83393-3438-44ED-98F0-D15641B43C7D)
# If container memory is not explicitly set, then the above flags will default max heap to 1/4th of container's memory which may not be ideal.
# Hence, setting up explicit Container memory and then assigning a percentage of it to the JVM for performance tuning.

# Note: The docker-compose file from github.com is a limited trial that goes into read-only mode after 2 days.
# Get the latest docker-compose.yml file with a 30-day trial license by accessing the Alfresco Content Services trial download page at:
# https://www.alfresco.com/platform/content-services-ecm/trial/download

version: '3.7'

services:

  nginx:
    image: nginx:1.16.1-alpine
    restart: always
    tty: true
    volumes:
      - ./src/main/resources/nginx/iparapheur.conf:/etc/nginx/conf.d/iparapheur.conf
      - ./src/main/resources/nginx/ssl/:/etc/nginx/ssl/
    ports:
      - 80:80
      - 443:443


  core:
    image: gitlab.libriciel.fr:4567/i-parapheur/components/ip-core:0.2
    restart: always
    tty: true
    depends_on:
      - postgres
      - alfresco
      - workflow
    volumes:
      - ./src/main/resources/core/application.yml:/application.yml
      - ./src/main/resources/core/sentry.properties:/sentry.properties
    external_links:
      - nginx:iparapheur.dom.local


  web:
    image: gitlab.libriciel.fr:4567/i-parapheur/components/ip-web:develop
    restart: always
    tty: true


  libersign:
    image: gitlab.libriciel.fr:4567/i-parapheur/signature/libersign:1.9.10
    restart: always
    tty: true


  workflow:
    image: gitlab.libriciel.fr:4567/outils/workflow:latest
    restart: always
    tty: true
    volumes:
      - ./src/main/resources/workflow/application.yml:/application.yml
      - ./src/main/resources/workflow/sentry.properties:/sentry.properties


  crypto:
    image: gitlab.libriciel.fr:4567/i-parapheur/components/ip-crypto:1.2
    restart: always
    tty: true
    volumes:
      - ./src/main/resources/crypto/application.yml:/application.yml
      - ./src/main/resources/crypto/sentry.properties:/sentry.properties


  pdf-stamp:
    # image: gitlab.libriciel.fr:4567/i-parapheur/outils/pdf-stamp:develop
    build: ../pdf-stamp
    restart: always
    tty: true


  alfresco:
    image: alfresco/alfresco-content-repository-community:6.1.1
    restart: always
    tty: true
    environment:
      JAVA_OPTS: "
                  -Ddb.driver=org.postgresql.Driver
                  -Ddb.username=alfresco
                  -Ddb.password=alfresco
                  -Ddb.url=jdbc:postgresql://postgres:5432/alfresco
                  -Dalfresco.host=alfresco
                  -Dalfresco.port=8080
                  -Dalf.root=/var/lib/alfresco
                  -Dheartbeat.enabled=false
                  -Xmx1g
                  "
    volumes:
      - ./data/alfresco:/usr/local/tomcat/alf_data


  postgres:
    build: src/main/resources/postgres
    restart: always
    tty: true
    environment:
      - POSTGRES_PASSWORD=libriciel2k18
      - POSTGRES_USER=root
      - DB_TO_CREATE=alfresco,flowable,keycloak,ipcore
    command: postgres -c max_connections=500 -c log_min_messages=LOG
    volumes:
      - ./data/postgres:/var/lib/postgresql/data


  keycloak:
    image: jboss/keycloak:9.0.0
    restart: always
    tty: true
    environment:
      - KEYCLOAK_USER=admin
      - KEYCLOAK_PASSWORD=admin
      - DB_VENDOR=postgres
      - DB_ADDR=postgres
      - DB_DATABASE=keycloak
      - DB_USER=keycloak
      - DB_PASSWORD=keycloak
      - KEYCLOAK_IMPORT=/tmp/keycloak.json
      - PROXY_ADDRESS_FORWARDING=true
    volumes:
      - ./src/main/resources/keycloak/keycloak.json:/tmp/keycloak.json
      # Fixing this bug, temporarly : https://issues.redhat.com/browse/KEYCLOAK-12896
      # The problematic line was just commented out
      # TODO : Remove it when keycloak 9.0.2 will be released.
      - ./src/main/resources/keycloak/docker-entrypoint.sh:/opt/jboss/tools/docker-entrypoint.sh


  matomo:
    image: matomo:3.13.0-apache
    tty: true
    depends_on:
      - matomo-db
    volumes:
      - ./src/main/resources/matomo/config/:/var/www/html/config/
      - ./src/main/resources/matomo/plugins/CustomDimensions:/var/www/html/plugins/CustomDimensions
    environment:
      - MATOMO_DATABASE_HOST=matomo-db
      - MATOMO_DATABASE_USERNAME=matomo
      - MATOMO_DATABASE_PASSWORD=matomo
      - MATOMO_DATABASE_DBNAME=matomo
  matomo-db:
    image: mariadb:10.3
    tty: true
    volumes:
      - ./data/matomo-db:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=libriciel2k18
      - MYSQL_DATABASE=matomo
      - MYSQL_USER=matomo
      - MYSQL_PASSWORD=matomo
